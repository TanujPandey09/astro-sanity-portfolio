---
import { useSanityClient, groq } from "astro-sanity";
import BlogSlider from "../components/Slider/BlogSlider.jsx";
import ProjectSlider from '../components/Slider/ProjectSlider'
import { ViewTransitions } from "astro:transitions";
import { fade } from "astro:transitions";
import { Icon } from "astro-icon/components";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import AIChatbot from "./AiChatbot";

const props = Astro.props

const query = groq`*[_type == "projects"]{
        ...,
        BackgroundImage{
      asset->{
        url
      }
      },
    }`;

const blogquery = groq`*[_type == "blogs"]{
       ...,
       FeatureImage{
      asset->{
        url
      }},
    }`;

const projectData = await useSanityClient().fetch(query);
const blogData = await useSanityClient().fetch(blogquery);

const experienceData = [
  {
    role: "Frontend Developer",
    company: "Nasyat IT",
    duration: "Feb 2025 - June 2025",
    type: "Remote",
    companyUrl: "https://www.nasyait.com/",
    description:
      "Developed a complete Hospital Management System using React.js, Material UI, and React Native. Built appointment booking, case sheet, and reports modules. Integrated REST APIs with Axios, improving performance by 20%. Handled UI and testing across web and mobile platforms.",
    technologies: [
      { name: "React.js", color: "bg-blue-500" },
      { name: "Material UI", color: "bg-green-500" },
      { name: "React Native", color: "bg-indigo-500" },
      { name: "Axios", color: "bg-yellow-500" },
      { name: "REST API", color: "bg-rose-500" },
    ],
    logo:
      "https://media.licdn.com/dms/image/v2/C4D0BAQHRS2pkyIQ-RQ/company-logo_200_200/company-logo_200_200/0/1630577732820/nasyait_logo?e=1757548800&v=beta&t=o5O7fEsY1W_lgo6059sqkgNCqnY9zJjWgWlWm2UlGLQ",
  },
  {
    role: "React Developer",
    company: "Techmatys",
    duration: "May 2024 - June 2024",
    type: "Onsite",
    companyUrl: "https://www.scube.co/",
    description:
      "Developed a modern LMS Dashboard using React.js, Ant Design, and React Router. Improved UI/UX accessibility, collaborated with cross-functional teams, and optimized reusable UI components for scalability.",
    technologies: [
      { name: "React.js", color: "bg-blue-500" },
      { name: "Ant Design", color: "bg-teal-500" },
      { name: "React Router", color: "bg-fuchsia-500" },
      { name: "JavaScript", color: "bg-yellow-400" },
    ],
    logo: "/img/techmatys.jfif",
  },
  {
    role: "Frontend Developer",
    company: "Scube.co",
    duration: "Dec 2021 - Feb 2024",
    type: "Remote",
    companyUrl: "https://www.scube.co/",
    description:
      "Led frontend development for a suite of CRUD web apps and CMS-integrated websites. Built scalable UI with Next.js and React.js, integrated Sanity & Contentful headless CMS, and implemented dynamic layouts with multilingual support.",
    technologies: [
      { name: "React.js", color: "bg-blue-500" },
      { name: "Next.js", color: "bg-slate-800" },
      { name: "Tailwind CSS", color: "bg-teal-400" },
      { name: "Sanity", color: "bg-pink-500" },
      { name: "Contentful", color: "bg-gray-600" },
      { name: "MUI", color: "bg-violet-500" },
      { name: "Headless CMS", color: "bg-cyan-600" },
    ],
    logo: "/img/SCUBE.webp",
  },
];

---

<section class="home-section px-4 font-Roboto h-screen w-auto">
  <div class="container mx-auto">
    <div class="grid grid-cols-1 md:gap-2 gap-12 text-center justify-center">
      <div
        class="text-primaryColor about_section border-e-red-50 flex flex-col items-center justify-center p-4 lg:p-24 m-4 lg:m-10 font-Roboto animate-fadeIn"
      >
        <h1
          class="text-2xl lg:text-4xl py-1 animate-slideDown"
        >
          Hii, I am Tanuj Pandey
        </h1>
        <p class="text-sm lg:text-xl py-1 lg:px-28 animate-slideUp">
          A Result-Oriented Web Developer building and managing Websites and Web
          Applications that leads to the success of the overall product
        </p>
        <button
          type="button"
          class="btn btn-primary text-secondaryColor text-base lg:text-2xl py-2 lg:py-3 px-4 hover:text-slate-400 animate-pulse"
          onclick="downloadResume()"
        >
          Get Resume
        </button>
      </div>
    </div>

    <!-- Work study -->
    <div class="experience-section h-auto animate-fadeIn">
      <h4 class="text-white lg:text-4xl text-base py-3 animate-slideDown">Professional Experience</h4>
    
      <div class="work-details">
        {
          experienceData.map((experience, index) => (
             <details
      id={`experience-${index}`}
      class={`group animate-slideIn animate-delay-${index}`}
    >
      <summary class="bg-secondaryBg p-4 md:text-lg text-sm text-white rounded-lg flex justify-between items-center mb-2 hover:bg-opacity-90 transition-all duration-300">
        <div>
          {experience.role}{" "}
          <span class="lg:px-4">{experience.company}</span>
        </div>

        <div class="flex items-center gap-4">
          <span class="lg:mx-12">{experience.duration}</span>
          <button
            type="button"
            class="text-xs bg-slate-700 px-2 py-1 rounded hover:bg-slate-600 transition-all"
            data-index={index}
            on:click={(e) => {
              e.stopPropagation();
              const id = e.target.dataset.index;
              const detailsEl = document.getElementById(`experience-${id}`);
              detailsEl.open = !detailsEl.open;
              const icon = document.getElementById(`icon-${id}`);
              if (icon) icon.innerText = detailsEl.open ? "▲" : "▼";
            }}
          >
            <span id={`icon-${index}`}>▼</span>
          </button>
        </div>
      </summary>
              <div class="bg-primaryColor p-10 mt-2 animate-fadeIn">
                <div class="flex lg:flex-row flex-col justify-between items-center">
                  <div class="left_wrapper">
                    <div class="flex flex-row text-white gap-1 items-center">
                      <Icon name="svg" size={20} />
                      <p>{experience.type}</p>
                      <a
                        href={experience.companyUrl}
                        target="_blank"
                        class="px-2 hover:text-slate-400 transition-colors"
                      >
                        {experience.company}
                      </a>
                    </div>
                    <div class="pt-1 text-white">
                      <p>{experience.description}</p>
                    </div>
                  </div>
                  <div class="company_logo pt-3 animate-scaleIn">
                    <img
                      src={experience.logo}
                      class="w-full h-auto object-contain"
                      alt={experience.company}
                    />
                  </div>
                </div>
                <div class="py-4 lg:gap-6">
                  {experience.technologies.map((tech, techIndex) => (
                    <span
                      key={techIndex}
                      class={`${tech.color} text-white-800 text-sm font-medium me-2 lg:px-2.5 lg:py-0.5 mx-2 rounded dark:bg-blue-900 dark:text-blue-300 animate-fadeIn animate-delay-${techIndex}`}
                    >
                      {tech.name}
                    </span>
                  ))}
                </div>
              </div>
            </details>
          ))
        }
      </div>
    </div>
    

    <!-- Works Section -->
    <div class="projects_section h-auto container mx-auto w-auto text-white animate-fadeIn">
      <div class="flex justify-between items-center">
        <h1 class="text-white font-Roboto text-base font-normal pt-8 pb-6 animate-slideDown">
          My Works
        </h1>
        <div class="border-gray-200 rounded-lg">
          <a
            href="/projects"
            class="font-Roboto text-base font-normal pt-8 pb-6 hover:text-slate-400 transition-colors"
            >View All</a
          >
        </div>
      </div>
      <div class="animate-slideUp">
        <ProjectSlider projectData={projectData} client:only/>
      </div>
    </div>

    <!-- Blogs Section -->
    <div class="blogs h-auto container mx-auto text-white w-auto animate-fadeIn">
      <div class="flex justify-between items-center">
        <h1 class="text-white font-Roboto text-base pt-8 pb-6 animate-slideDown">Blogs</h1>
        <div class="max-w-sm border-gray-200 rounded-lg">
          <a
            class="font-Roboto text-base font-normal hover:text-slate-400 transition-colors"
            href="/blogs">View All</a
          >
        </div>
      </div>
      <div class="animate-slideUp">
        <BlogSlider blogData={blogData} client:only />
      </div>
    </div>

  </div>

 
  
</section>
<section>
   <div>
 <AIChatbot apiKey={import.meta.env.PUBLIC_OPENAI_API_KEY} client:only />
  </div>
</section>
<style>
  /* Base animations */
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes slideDown {
    from { transform: translateY(-20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }

  @keyframes slideUp {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }

  @keyframes slideIn {
    from { transform: translateX(-20px); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }

  @keyframes scaleIn {
    from { transform: scale(0.9); opacity: 0; }
    to { transform: scale(1); opacity: 1; }
  }

  @keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
  }

  /* Animation classes */
  .animate-fadeIn {
    animation: fadeIn 0.8s ease-out forwards;
  }

  .animate-slideDown {
    animation: slideDown 0.8s ease-out forwards;
  }

  .animate-slideUp {
    animation: slideUp 0.8s ease-out forwards;
  }

  .animate-slideIn {
    animation: slideIn 0.8s ease-out forwards;
  }

  .animate-scaleIn {
    animation: scaleIn 0.8s ease-out forwards;
  }

  .animate-pulse {
    animation: pulse 2s infinite;
  }

  /* Animation delays */
  .animate-delay-0 { animation-delay: 0s; }
  .animate-delay-1 { animation-delay: 0.2s; }
  .animate-delay-2 { animation-delay: 0.4s; }
  .animate-delay-3 { animation-delay: 0.6s; }
  .animate-delay-4 { animation-delay: 0.8s; }

  /* Smooth transitions */
  .transition-all {
    transition: all 0.3s ease;
  }

  .transition-colors {
    transition: color 0.3s ease;
  }

  /* Hover effects */
  .hover\:bg-opacity-90:hover {
    background-color: rgba(var(--bg-color), 0.9);
  }

  details summary {
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  details summary:hover {
    background-color: rgba(255, 255, 255, 0.1);
  }

  details[open] summary {
    margin-bottom: 1rem;
  }

  details[open] > div {
    animation: fadeIn 0.5s ease-out forwards;
  }
</style>

<script is:inline>
  function downloadResume() {
    const resumeUrl = "/Resume.pdf";
    const link = document.createElement("a");
    link.href = resumeUrl;
    link.target = "_blank";
    link.download = "resume.pdf";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  }
</script>
</boltArtifact>

