---
import { Link } from "astro-link";
import { PortableText } from "astro-portabletext";
const data = Astro.props;
---

<section class="project-section container mx-auto md:px-0 px-4 py-4 font-Roboto relative overflow-hidden">
  <!-- Enhanced Animated Background -->
  <div class="fixed inset-0 -z-10 bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 animate-gradient-shift">
    <!-- Floating Particles -->
    <div class="floating-particles">
      <div class="particle particle-1"></div>
      <div class="particle particle-2"></div>
      <div class="particle particle-3"></div>
      <div class="particle particle-4"></div>
      <div class="particle particle-5"></div>
    </div>
    
    <!-- Glowing Orbs -->
    <div class="orb orb-1"></div>
    <div class="orb orb-2"></div>
    <div class="orb orb-3"></div>
    
    <!-- Grid Pattern -->
    <div class="grid-pattern"></div>
  </div>

  <!-- Header with Animation -->
  <div class="text-center mb-16 relative">
    <h1 class="text-5xl md:text-6xl font-bold text-white mb-4 animate-fade-in-up">
      My <span class="text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-400 animate-gradient-text">Works</span>
    </h1>
    <div class="w-24 h-1 bg-gradient-to-r from-purple-400 to-pink-400 mx-auto rounded-full animate-expand"></div>
  </div>

  <!-- Projects Grid -->
  <div class="grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-8 mt-10 md:px-12">
    {
      data.projectData?.map((projectItem, index) => {
        return (
          <div class="project_container animate-fade-in-up" style={`animation-delay: ${index * 0.1}s`}>
            <div class="project-card group relative overflow-hidden rounded-2xl bg-white/10 backdrop-blur-md border border-white/20 shadow-2xl hover:shadow-purple-500/25 transition-all duration-500 hover:scale-105 hover:border-purple-400/50">
              
              <!-- Image Container with Overlay -->
              <div class="relative overflow-hidden">
                <img
                  class="w-full h-48 object-cover transition-transform duration-700 group-hover:scale-110"
                  src={`${projectItem?.BackgroundImage?.asset?.url}`}
                  alt={projectItem?.projectName}
                  loading="lazy"
                />
                <!-- Gradient Overlay -->
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                
                <!-- Hover Icon -->
                <div class="absolute top-4 right-4 w-10 h-10 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
                  <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                  </svg>
                </div>
              </div>

              <!-- Content Section -->
              <Link
                href={`/projects/${projectItem.slug?.current}`}
                externalInNewTab={true}
                class="block"
              >
                <div class="info-section p-6 pb-4">
                  <!-- Project Title -->
                  <div class="mb-4">
                    <h3 class="text-xl md:text-2xl font-bold text-white mb-3 group-hover:text-purple-300 transition-colors duration-300">
                      {projectItem?.projectName}
                    </h3>
                    <div class="text-gray-300 leading-relaxed">
                      <PortableText
                        class="prose prose-sm prose-invert max-w-none"
                        value={projectItem?.excerpt}
                      />
                    </div>
                  </div>

                  <!-- Tags -->
                  <div class="flex flex-wrap gap-2 mb-6">
                    {projectItem?.tags?.map((tagsItem) => {
                      return (
                        <span class="inline-block bg-white/10 backdrop-blur-sm border border-white/20 rounded-full px-3 py-1 text-xs font-medium text-purple-200 hover:bg-purple-500/20 hover:border-purple-400/50 transition-all duration-300">
                          {tagsItem}
                        </span>
                      );
                    })}
                  </div>
                </div>
              </Link>

              <!-- Links Section - Moved outside Link component -->
              <div class="px-6 pb-6">
                <div class="flex items-center gap-4 text-sm">
                  <a
                    href={projectItem?.gitHubLink?.current}
                    class="github-link inline-flex items-center gap-2 text-gray-300 hover:text-white transition-all duration-300 group/github relative"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <svg class="w-4 h-4 transition-transform duration-300 group-hover/github:rotate-12 group-hover/github:scale-110" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                    <span class="relative">
                      GitHub
                      <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-purple-400 to-pink-400 transition-all duration-300 group-hover/github:w-full"></span>
                    </span>
                  </a>
                  
                  <span class="text-gray-500">â€¢</span>
                  
                  <a 
                    href={projectItem?.demoLink?.current}
                    class="demo-link inline-flex items-center gap-2 text-gray-300 hover:text-purple-300 transition-all duration-300 group/demo relative"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <svg class="w-4 h-4 transition-transform duration-300 group-hover/demo:translate-x-1 group-hover/demo:scale-110" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                    </svg>
                    <span class="relative">
                      Live Demo
                      <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-purple-400 to-pink-400 transition-all duration-300 group-hover/demo:w-full"></span>
                    </span>
                  </a>
                </div>
              </div>
            </div>
          </div>
        );
      })
    }
  </div>
</section>

<style>
  /* Custom animations and styles */
  @keyframes gradient-shift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.7; }
    25% { transform: translateY(-20px) rotate(90deg); opacity: 1; }
    50% { transform: translateY(-10px) rotate(180deg); opacity: 0.8; }
    75% { transform: translateY(-30px) rotate(270deg); opacity: 0.9; }
  }

  @keyframes pulse-glow {
    0%, 100% { 
      transform: scale(1); 
      opacity: 0.4; 
    }
    50% { 
      transform: scale(1.2); 
      opacity: 0.7; 
    }
  }

  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes expand {
    from {
      width: 0;
    }
    to {
      width: 6rem;
    }
  }

  @keyframes gradient-text {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  /* Background animations */
  .animate-gradient-shift {
    background: linear-gradient(-45deg, #0f172a, #581c87, #1e293b, #7c3aed, #0f172a);
    background-size: 400% 400%;
    animation: gradient-shift 15s ease infinite;
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.8s ease-out forwards;
    opacity: 0;
  }

  .animate-expand {
    animation: expand 1s ease-out 0.5s forwards;
  }

  .animate-gradient-text {
    background-size: 200% auto;
    animation: gradient-text 3s linear infinite;
  }

  /* Floating Particles */
  .floating-particles {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .particle {
    position: absolute;
    background: rgba(147, 51, 234, 0.3);
    border-radius: 50%;
    animation: float 8s ease-in-out infinite;
  }

  .particle-1 {
    width: 4px;
    height: 4px;
    left: 10%;
    top: 20%;
    animation-delay: 0s;
  }

  .particle-2 {
    width: 6px;
    height: 6px;
    left: 80%;
    top: 60%;
    animation-delay: 2s;
  }

  .particle-3 {
    width: 3px;
    height: 3px;
    left: 60%;
    top: 30%;
    animation-delay: 4s;
  }

  .particle-4 {
    width: 5px;
    height: 5px;
    left: 30%;
    top: 70%;
    animation-delay: 6s;
  }

  .particle-5 {
    width: 4px;
    height: 4px;
    left: 90%;
    top: 40%;
    animation-delay: 8s;
  }

  /* Glowing Orbs */
  .orb {
    position: absolute;
    border-radius: 50%;
    filter: blur(40px);
    animation: pulse-glow 6s ease-in-out infinite;
  }

  .orb-1 {
    width: 200px;
    height: 200px;
    background: radial-gradient(circle, rgba(147, 51, 234, 0.4) 0%, transparent 70%);
    top: 10%;
    left: 20%;
    animation-delay: 0s;
  }

  .orb-2 {
    width: 150px;
    height: 150px;
    background: radial-gradient(circle, rgba(168, 85, 247, 0.3) 0%, transparent 70%);
    bottom: 20%;
    right: 30%;
    animation-delay: 2s;
  }

  .orb-3 {
    width: 100px;
    height: 100px;
    background: radial-gradient(circle, rgba(196, 181, 253, 0.2) 0%, transparent 70%);
    top: 50%;
    left: 70%;
    animation-delay: 4s;
  }

  /* Grid Pattern */
  .grid-pattern {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.1;
    background-image: 
      linear-gradient(rgba(147, 51, 234, 0.3) 1px, transparent 1px),
      linear-gradient(90deg, rgba(147, 51, 234, 0.3) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: float 20s ease-in-out infinite;
  }

  /* Project Card Enhancements */
  .project-card {
    transform-style: preserve-3d;
  }

  .project-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, transparent, rgba(147, 51, 234, 0.1), transparent);
    opacity: 0;
    transition: opacity 0.5s ease;
    border-radius: inherit;
    z-index: -1;
  }

  .project-card:hover::before {
    opacity: 1;
  }

  /* Enhanced Link Hover Effects */
  .github-link {
    position: relative;
    overflow: hidden;
  }

  .github-link::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(147, 51, 234, 0.2), transparent);
    transition: left 0.5s;
  }

  .github-link:hover::before {
    left: 100%;
  }

  .github-link:hover {
    color: #ffffff;
    text-shadow: 0 0 8px rgba(147, 51, 234, 0.6);
    transform: translateY(-2px);
  }

  .demo-link {
    position: relative;
    overflow: hidden;
  }

  .demo-link::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(168, 85, 247, 0.2), transparent);
    transition: left 0.5s;
  }

  .demo-link:hover::before {
    left: 100%;
  }

  .demo-link:hover {
    color: #c084fc;
    text-shadow: 0 0 8px rgba(168, 85, 247, 0.6);
    transform: translateY(-2px);
  }

  /* Additional hover effects for icons */
  .github-link:hover svg {
    filter: drop-shadow(0 0 4px rgba(147, 51, 234, 0.8));
  }

  .demo-link:hover svg {
    filter: drop-shadow(0 0 4px rgba(168, 85, 247, 0.8));
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .orb {
      width: 100px !important;
      height: 100px !important;
    }
    
    .particle {
      display: none;
    }

    .github-link, .demo-link {
      font-size: 0.875rem;
    }
  }

  /* Focus states for accessibility */
  .github-link:focus,
  .demo-link:focus {
    outline: 2px solid rgba(147, 51, 234, 0.5);
    outline-offset: 2px;
    border-radius: 4px;
  }
</style>