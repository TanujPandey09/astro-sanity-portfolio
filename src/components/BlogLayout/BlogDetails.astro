---
import { PortableText } from "astro-portabletext";
import PortableTextImage from "./PortableTextImage.astro";
import { Icon } from "astro-icon/components";

export interface BlogPost {
  slug: {
    current: string;
  };
  projectName: string;
  BackgroundImage: {
    asset: {
      url: string;
    };
  };
  blogcontent?: any;
  excerpt?: any;
}

export interface Props {
  detailsData: BlogPost;
  blogData: BlogPost[];
}

const { detailsData, blogData } = Astro.props;

const components = {
  type: {
    image: PortableTextImage
  }
};

const getRandomPosts = (allPosts: BlogPost[], currentPostSlug: string, count = 3) => {
  const otherPosts = allPosts.filter(post => post.slug?.current !== currentPostSlug);
  return [...otherPosts].sort(() => 0.5 - Math.random()).slice(0, count);
};

const randomRelatedPosts = getRandomPosts(blogData, detailsData.slug?.current);
---

<main class="pt-8 pb-24 bg-transparent text-white antialiased">
    <div class="fixed inset-0 -z-10 bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 animate-gradient-shift"></div>
  <div class="max-w-screen-xl mx-auto px-4">
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
      <article class="col-span-2 mx-auto w-full max-w-2xl">
        <header class="mb-6">
          <h1 class="mb-4 text-3xl font-extrabold leading-tight lg:text-4xl">
            {detailsData.projectName}
          </h1>
        </header>

        {detailsData.BackgroundImage?.asset?.url && (
          <figure class="mb-8">
            <img 
              src={detailsData.BackgroundImage.asset.url} 
              alt={detailsData.projectName} 
              class="w-full rounded-lg shadow-lg"
            />
          </figure>
        )}

        <div class="blog-details-content">
          <PortableText value={detailsData.blogcontent} components={components} />
        </div>
      </article>

      <aside aria-label="Related articles" class="bg-gray-900 rounded-xl p-6 h-fit lg:sticky lg:top-8">
        <h2 class="mb-6 text-2xl font-bold text-white inline-flex items-center gap-2">
          <span class="w-8 h-1 bg-indigo-500 rounded-full"></span>
          Related Articles
        </h2>
        
        <div class="grid gap-8">
          {randomRelatedPosts.map((relatedBlog) => (
            <article key={relatedBlog.slug.current} 
              class="group relative overflow-hidden transition-all hover:transform hover:scale-[1.02]"
            >
              <a href={`/blogs/${relatedBlog.slug.current}`} class="block">
                <div class="relative">
                  {relatedBlog.BackgroundImage?.asset?.url && (
                    <img
                      src={relatedBlog.BackgroundImage.asset.url}
                      alt={relatedBlog.projectName}
                      class="w-full h-48 object-cover rounded-lg brightness-90 group-hover:brightness-100 transition-all"
                    />
                  )}
                  <div class="absolute inset-0 bg-gradient-to-t from-gray-900/80 to-transparent rounded-lg"></div>
                </div>

                <div class="mt-4 space-y-2">
                  <h3 class="text-lg font-bold leading-tight group-hover:text-indigo-400 transition-colors">
                    {relatedBlog.projectName}
                  </h3>
                  
                  <div class="text-sm text-gray-400 line-clamp-2">
                    <PortableText value={relatedBlog.excerpt} />
                  </div>

                  <div class="flex items-center gap-2 text-sm text-gray-400 pt-2">
                    <Icon name="mdi:clock" />
                    <span>2 min read</span>
                    <span class="inline-flex items-center text-indigo-400 group-hover:translate-x-1 transition-transform">
                      Read more â†’
                    </span>
                  </div>
                </div>
              </a>
            </article>
          ))}
        </div>
      </aside>
    </div>
  </div>
</main>